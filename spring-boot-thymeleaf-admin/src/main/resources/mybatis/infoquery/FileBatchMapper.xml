<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyx.mapper.infoquery.FileBatchMapper">

	<!--表名 -->
	<sql id="tableName">
		"BON_FILE_BATCH_TBL"
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		YWLX,
		TRANS_DATE,
		TRANS_TIME,
		ORGCODE,
		FILE_DIRECTION_CD,
		FILE_TYPE_CD,
		FILE_TYPE_DTL_CD,
		FILE_NAME,
		FILE_NUM,
		POINTS,
		OTHER_NUM,
		LOC_FILE_NAME,
		RMT_FILE_NAME,
		TRANS_RSLT_CD,
		PROCESS_RSLT_CD,
		TRANS_FAIL_QT,
		MISC_TX,
		ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{YWLX},
		#{TRANS_DATE},
		#{TRANS_TIME},
		#{ORGCODE},
		#{FILE_DIRECTION_CD},
		#{FILE_TYPE_CD},
		#{FILE_TYPE_DTL_CD},
		#{FILE_NAME},
		#{FILE_NUM},
		#{POINTS},
		#{OTHER_NUM},
		#{LOC_FILE_NAME},
		#{RMT_FILE_NAME},
		#{TRANS_RSLT_CD},
		#{PROCESS_RSLT_CD},
		#{TRANS_FAIL_QT},
		#{MISC_TX},
		to_char(sysdate,'yyyyMMdd')||POINTS_DATA_SEQ.NEXTVAL		
	</sql>
	
	<select id="list" parameterType="java.util.Map" resultType="java.util.Map">
		select 
				YWLX,
				TRANS_DATE,
				TRANS_TIME,
				ORGCODE,
				FILE_DIRECTION_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'FILE_DIRECTION_CD')
		           and bianma = FILE_DIRECTION_CD) FILE_DIRECTION_CD_DESC,
				FILE_TYPE_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'FILE_TYPE_CD')
		           and bianma = FILE_TYPE_CD) FILE_TYPE_CD_DESC,
				FILE_TYPE_DTL_CD,
				FILE_NAME,
				FILE_NUM,
				POINTS,
				OTHER_NUM,
				LOC_FILE_NAME,
				RMT_FILE_NAME,
				TRANS_RSLT_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'TRANS_RSLT_CD')
		           and bianma = TRANS_RSLT_CD) TRANS_RSLT_CD_DESC,
				PROCESS_RSLT_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'PROCESS_RSLT_CD')
		           and bianma = PROCESS_RSLT_CD) PROCESS_RSLT_CD_DESC,
				TRANS_FAIL_QT,
				MISC_TX,
		ID
		from 
			<include refid="tableName"></include> a,(select * from jt_organ start with organ_id= #{user.organId} connect by prior organ_id = parent_id) b
			where a.oper_org = b.organ_id
		
		
	</select>
	
	<select id="isExists" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from 
		<include refid="tableName"></include> 
		where ID = #{ID}
	</select>
	
	<select id="listById" parameterType="java.util.Map" resultType="java.util.Map">
		select 
				YWLX,
				TRANS_DATE,
				TRANS_TIME,
				ORGCODE,
				FILE_DIRECTION_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'FILE_DIRECTION_CD')
		           and bianma = FILE_DIRECTION_CD) FILE_DIRECTION_CD_DESC,
				FILE_TYPE_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'FILE_TYPE_CD')
		           and bianma = FILE_TYPE_CD) FILE_TYPE_CD_DESC,
				FILE_TYPE_DTL_CD,
				FILE_NAME,
				FILE_NUM,
				POINTS,
				OTHER_NUM,
				LOC_FILE_NAME,
				RMT_FILE_NAME,
				TRANS_RSLT_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'TRANS_RSLT_CD')
		           and bianma = TRANS_RSLT_CD) TRANS_RSLT_CD_DESC,
				PROCESS_RSLT_CD,
				(select name
		          from jt_dictionaries
		         where parent_id in
		               (select dic_id
		                  from jt_column_dic dic
		                 where dic.table_name = 'BON_FILE_BATCH_TBL'
		                   and dic.table_column = 'PROCESS_RSLT_CD')
		           and bianma = PROCESS_RSLT_CD) PROCESS_RSLT_CD_DESC,
				TRANS_FAIL_QT,
				MISC_TX,
		ID
		from 
		<include refid="tableName"></include>
		where ID = #{ID}
	</select>
	
	<insert id="save" parameterType="java.util.Map">
		insert into 
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		update 
		<include refid="tableName"></include>
		set 
		YWLX = #{YWLX},
		TRANS_DATE = #{TRANS_DATE},
		TRANS_TIME = #{TRANS_TIME},
		ORGCODE = #{ORGCODE},
		FILE_DIRECTION_CD = #{FILE_DIRECTION_CD},
		FILE_TYPE_CD = #{FILE_TYPE_CD},
		FILE_TYPE_DTL_CD = #{FILE_TYPE_DTL_CD},
		FILE_NAME = #{FILE_NAME},
		FILE_NUM = #{FILE_NUM},
		POINTS = #{POINTS},
		OTHER_NUM = #{OTHER_NUM},
		LOC_FILE_NAME = #{LOC_FILE_NAME},
		RMT_FILE_NAME = #{RMT_FILE_NAME},
		TRANS_RSLT_CD = #{TRANS_RSLT_CD},
		PROCESS_RSLT_CD = #{PROCESS_RSLT_CD},
		TRANS_FAIL_QT = #{TRANS_FAIL_QT},
		MISC_TX = #{MISC_TX},
		ID = ID
		where ID = #{ID}
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		delete from 
		<include refid="tableName"></include>
		where ID = #{ID}
	</delete>
    
</mapper>